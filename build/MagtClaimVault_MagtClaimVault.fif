// automatically generated from `@stdlib/std/stdlib.fc` `C:/magt/build/MagtClaimVault_MagtClaimVault.fc` 
PROGRAM{
  DECLPROC __tact_store_address_opt
  DECLPROC __tact_context_get
  DECLPROC __tact_context_get_sender
  DECLPROC __tact_dict_get_slice_int
  DECLPROC __tact_dict_set_slice_int
  DECLPROC $DeployOk$_store
  DECLPROC $DeployOk$_store_cell
  DECLPROC $MagtClaimVault$_store
  DECLPROC $MagtClaimVault$_load
  DECLPROC $Context$_get_value
  DECLPROC $MagtClaimVault$init$_load
  DECLPROC $MagtClaimVault$_contract_init
  DECLPROC $MagtClaimVault$_contract_load
  DECLPROC $MagtClaimVault$_contract_store
  DECLPROC $MagtClaimVault$_fun_get_admin
  DECLPROC $MagtClaimVault$_fun_get_fee_ton
  DECLPROC $MagtClaimVault$_fun_get_jetton_wallet
  DECLPROC $MagtClaimVault$_fun_get_allowance
  DECLPROC $MessageParameters$_constructor_bounce_to_value_mode_body
  DECLPROC $MagtClaimVault$_fun_notify
  DECLPROC $MagtClaimVault$_fun_owner
  DECLPROC $SendParameters$_constructor_to_value_bounce_body
  DECLPROC $DeployOk$_constructor_queryId
  113142 DECLMETHOD %get_admin
  93227 DECLMETHOD %get_fee_ton
  68790 DECLMETHOD %get_jetton_wallet
  72030 DECLMETHOD %get_allowance
  83229 DECLMETHOD %owner
  DECLPROC recv_internal
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_store_address_opt PROCINLINE:<{
    DUP
    ISNULL
    IF:<{
      DROP
      b{00} STSLICECONST
    }>ELSE<{
      SWAP
      STSLICE
    }>
  }>
  __tact_context_get PROCINLINE:<{
    __tact_context GETGLOB
    4 UNTUPLE
  }>
  __tact_context_get_sender PROCINLINE:<{
    __tact_context_sender GETGLOB
  }>
  __tact_dict_get_slice_int PROCINLINE:<{
    s1 s3 s3 XCHG3
        DICTGET NULLSWAPIFNOT
    IF:<{
      SWAP
      LDIX
      DROP
    }>ELSE<{
      2DROP
      PUSHNULL
    }>
  }>
  __tact_dict_set_slice_int PROCINLINE:<{
    OVER
    ISNULL
    IF:<{
      2DROP
      -ROT
          DICTDEL
      DROP
    }>ELSE<{
      NEWC
      SWAP
      STIX
      s1 s3 s3 XCHG3
      DICTSETB
    }>
  }>
  $DeployOk$_store PROCINLINE:<{
    2952335191 PUSHINT
    ROT
    32 STU
    64 STU
  }>
  $DeployOk$_store_cell PROCINLINE:<{
    SWAP
    $DeployOk$_store INLINECALLDICT
    ENDC
  }>
  $MagtClaimVault$_store PROCINLINE:<{
    s3 s4 XCHG2
    STSLICE
    257 PUSHINT
    STIX
    SWAP
    __tact_store_address_opt INLINECALLDICT
    STDICT
  }>
  $MagtClaimVault$_load PROCINLINE:<{
    LDMSGADDR
    257 PUSHINT
    LDIX
                b{00} SDBEGINSQ
                IF:<{
                  PUSHNULL
                }>ELSE<{
                  LDMSGADDR
                  SWAP
                }>
    SWAP
    LDDICT
    4 -ROLL
  }>
  $Context$_get_value PROCINLINE:<{
    s1 s3 XCHG
    3 BLKDROP
  }>
  $MagtClaimVault$init$_load PROCINLINE:<{
    LDMSGADDR
    257 PUSHINT
    LDIX
    -ROT
  }>
  $MagtClaimVault$_contract_init PROCINLINE:<{
    PUSHNULL
    PUSHNULL
  }>
  $MagtClaimVault$_contract_load PROCINLINE:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    IF:<{
      $MagtClaimVault$_load INLINECALLDICT
      1 4 BLKDROP2
    }>ELSE<{
      $MagtClaimVault$init$_load INLINECALLDICT
      s0 s2 XCHG
      ENDS
      SWAP
      $MagtClaimVault$_contract_init INLINECALLDICT
    }>
  }>
  $MagtClaimVault$_contract_store PROCINLINE:<{
    NEWC
    TRUE
    SWAP
    1 STI
    4 -ROLL
    $MagtClaimVault$_store INLINECALLDICT
    ENDC
    c4 POP
  }>
  $MagtClaimVault$_fun_get_admin PROCREF:<{
    s3 PUSH
  }>
  $MagtClaimVault$_fun_get_fee_ton PROCREF:<{
    s2 PUSH
  }>
  $MagtClaimVault$_fun_get_jetton_wallet PROCREF:<{
    OVER
  }>
  $MagtClaimVault$_fun_get_allowance PROCREF:<{
    267 PUSHINT
    s2 PUSH
    s0 s2 XCHG
    257 PUSHINT
    __tact_dict_get_slice_int INLINECALLDICT
    DUP
    ISNULL
    NOT
    IF:<{
    }>ELSE<{
      DROP
      0 PUSHINT
    }>
  }>
  $MessageParameters$_constructor_bounce_to_value_mode_body PROCINLINE:<{
    s3 s3 XCHG2
    s0 s4 XCHG
  }>
  $MagtClaimVault$_fun_notify PROCINLINE:<{
    __tact_context_get_sender INLINECALLDICT
    FALSE
    0 PUSHINT
    s0 s3 XCHG2
    66 PUSHINT
    SWAP
    $MessageParameters$_constructor_bounce_to_value_mode_body INLINECALLDICT
        NEWC
        b{01} STSLICECONST  // store tag = $0 and ihr_disabled = true
        1 STI               // store `bounce`
        b{000} STSLICECONST // store bounced = false and src = addr_none
        STSLICE             // store `to`
        SWAP
        STGRAMS             // store `value`
        106 PUSHINT         // 1 + 4 + 4 + 64 + 32 + 1
        STZEROES
        // → Stack state
        // s0: Builder
        // s1: `body`
        // s2: `mode`
        STDICT
        ENDC
        SWAP
        SENDRAWMSG
  }>
  $MagtClaimVault$_fun_owner PROCREF:<{
    s3 PUSH
  }>
  $SendParameters$_constructor_to_value_bounce_body PROCINLINE:<{
    0 PUSHINT
    s3 s4 XCHG2
    PUSHNULL
    s0 s3 XCHG
    PUSHNULL
    3 -ROLL
  }>
  $DeployOk$_constructor_queryId PROCINLINE:<{
  }>
  %get_admin PROC:<{
    $MagtClaimVault$_contract_load INLINECALLDICT
    $MagtClaimVault$_fun_get_admin INLINECALLDICT
    4 1 BLKDROP2
  }>
  %get_fee_ton PROC:<{
    $MagtClaimVault$_contract_load INLINECALLDICT
    $MagtClaimVault$_fun_get_fee_ton INLINECALLDICT
    4 1 BLKDROP2
  }>
  %get_jetton_wallet PROC:<{
    $MagtClaimVault$_contract_load INLINECALLDICT
    $MagtClaimVault$_fun_get_jetton_wallet INLINECALLDICT
    4 1 BLKDROP2
  }>
  %get_allowance PROC:<{
    $MagtClaimVault$_contract_load INLINECALLDICT
    4 ROLL
    $MagtClaimVault$_fun_get_allowance INLINECALLDICT
    4 1 BLKDROP2
  }>
  %owner PROC:<{
    $MagtClaimVault$_contract_load INLINECALLDICT
    $MagtClaimVault$_fun_owner INLINECALLDICT
    4 1 BLKDROP2
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $MagtClaimVault$_contract_load INLINECALLDICT
    s0 s5 XCHG
    IFJMP:<{
      5 BLKDROP
    }>
    s0 s3 XCHG
    32 LDUQ 130 THROWIFNOT
    OVER
    1213265332 PUSHINT
    EQUAL
    IFJMP:<{
      NIP
      s3 POP
      s0 s2 XCHG
      LDMSGADDR
      DROP
      45917 PUSHINT
      __tact_context_get_sender INLINECALLDICT
      s3 PUSH
      SDEQ
      THROWANYIFNOT
      s0 s3 XCHG2
      $MagtClaimVault$_contract_store INLINECALLDICT
    }>
    OVER
    3664701100 PUSHINT
    EQUAL
    IFJMP:<{
      NIP
      LDMSGADDR
      257 PUSHINT
      LDIX
      DROP
      45917 PUSHINT
      __tact_context_get_sender INLINECALLDICT
      s5 PUSH
      SDEQ
      THROWANYIFNOT
      DUP
      1 LESSINT
      IF:<{
        DROP
        s0 s4 XCHG2
        267 PUSHINT
            DICTDEL
        DROP
      }>ELSE<{
        s2 s5 XCHG
        267 PUSHINT
        -ROT
        257 PUSHINT
        __tact_dict_set_slice_int INLINECALLDICT
      }>
      s3 s3 s0 XCHG3
      $MagtClaimVault$_contract_store INLINECALLDICT
    }>
    OVER
    3444911050 PUSHINT
    EQUAL
    IFJMP:<{
      NIP
      1 LDI
      SWAP
      IF:<{
        257 PUSHINT
        LDIX
        DROP
      }>ELSE<{
        DROP
        PUSHNULL
      }>
      29727 PUSHINT
      s4 PUSH
      ISNULL
      NOT
      THROWANYIFNOT
      26995 PUSHINT
      __tact_context_get INLINECALLDICT
      $Context$_get_value INLINECALLDICT
      s3 PUSH
      GEQ
      THROWANYIFNOT
      __tact_context_get_sender INLINECALLDICT
      s5 PUSH
      267 PUSHINT
      s2 PUSH
      257 PUSHINT
      __tact_dict_get_slice_int INLINECALLDICT
      59755 PUSHINT
      OVER
      ISNULL
      NOT
      THROWANYIFNOT
      59755 PUSHINT
      OVER
      0 GTINT
      THROWANYIFNOT
      s2 PUSH
      ISNULL
      NOT
      IF:<{
      }>ELSE<{
        s2 POP
        OVER
      }>
      3581 PUSHINT
      s3 PUSH
      0 GTINT
      THROWANYIFNOT
      44302 PUSHINT
      s1 s3 PUSH2
      GEQ
      THROWANYIFNOT
      s2 PUSH
      SUB
      s2 POP
      OVER
      0 GTINT
      IF:<{
        s1 s5 XCHG
        267 PUSHINT
        s0 s0 s6 XCPUXC
        257 PUSHINT
        __tact_dict_set_slice_int INLINECALLDICT
      }>ELSE<{
        NIP
        s0 s4 PUXC
        267 PUSHINT
            DICTDEL
        DROP
      }>
      50000000 PUSHINT
          NEWC
          NOW
      DROP
      s0 s6 PUXC
          STSLICER
      DROP
          MYADDR
      s6 s(-1) PUXC
          STSLICER
      DROP
      PUSHNULL
      s6 PUSH
          STOPTREF
      DROP
      s5 s(-1) PUXC
          STVARUINT16
      DROP
      PUSHNULL
      s5 PUSH
          STOPTREF
      DROP
      __tact_context_get INLINECALLDICT
      $Context$_get_value INLINECALLDICT
      TRUE
      s0 s6 XCHG
          ENDC
      s5 PUSH
      s0 s3 XCHG
      s7 s7 XCHG2
      $SendParameters$_constructor_to_value_bounce_body INLINECALLDICT
          NEWC
          b{01} STSLICECONST  // store tag = $0 and ihr_disabled = true
          1 STI               // store `bounce`
          b{000} STSLICECONST // store bounced = false and src = addr_none
          STSLICE             // store `to`
          SWAP
          STGRAMS             // store `value`
          105 PUSHINT         // 1 + 4 + 4 + 64 + 32
          STZEROES            // store currency_collection, ihr_fee, fwd_fee, created_lt and created_at
          // → Stack state
          // s0: Builder
          // s1: `data`
          // s2: `code`
          // s3: `body`
          // s4: `mode`
          // Group 2: Placing the Builder after code and data, then checking those for nullability
          s2 XCHG0
          DUP2
          ISNULL
          SWAP
          ISNULL
          AND
          // → Stack state
          // s0: -1 (true) if `data` and `code` are both null, 0 (false) otherwise
          // s1: `code`
          // s2: `data`
          // s3: Builder
          // s4: `body`
          // s5: `mode`
          // Group 3: Left branch of the IFELSE, executed if s0 is -1 (true)
          <{
              DROP2 // drop `data` and `code`, since either of those is null
              b{0} STSLICECONST
          }> PUSHCONT
          // Group 3: Right branch of the IFELSE, executed if s0 is 0 (false)
          <{
              // _ split_depth:(Maybe (## 5))
              //   special:(Maybe TickTock)
              //   code:(Maybe ^Cell)
              //   data:(Maybe ^Cell)
              //   library:(Maybe ^Cell)
              // = StateInit;
              ROT                // place message Builder on top
              b{10} STSLICECONST // store Maybe = true, Either = false
              // Start composing inlined StateInit
              b{00} STSLICECONST // store split_depth and special first
              STDICT             // store code
              STDICT             // store data
              b{0} STSLICECONST  // store library
          }> PUSHCONT
          // Group 3: IFELSE that does the branching shown above
          IFELSE
          // → Stack state
          // s0: Builder
          // s1: null or StateInit
          // s2: `body`
          // s3: `mode`
          // Group 4: Finalizing the message
          STDICT // store `body` as ref with an extra Maybe bit, since `body` might be null
          ENDC
          // → Stack state
          // s0: Cell
          // s1: `mode`
          // Group 5: Sending the message, with `mode` on top
          SWAP
          SENDRAWMSG // https://github.com/tact-lang/tact/issues/1558
      s0 s0 s3 XCHG3
      $MagtClaimVault$_contract_store INLINECALLDICT
    }>
    SWAP
    2490013878 PUSHINT
    EQUAL
    IFJMP:<{
      64 LDU
      DROP
      $DeployOk$_constructor_queryId INLINECALLDICT
      NEWC
      $DeployOk$_store_cell INLINECALLDICT
      s4 s3 s0 XCHG3
      s1 s2 XCHG
      $MagtClaimVault$_fun_notify INLINECALLDICT
      $MagtClaimVault$_contract_store INLINECALLDICT
    }>
    5 BLKDROP
    130 THROW
  }>
}END>c
