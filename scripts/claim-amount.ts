import { NetworkProvider } from "@ton/blueprint";
import { toNano } from "@ton/core";
import { MagtClaimVault } from "../build/MagtClaimVault_MagtClaimVault";

export async function run(provider: NetworkProvider) {
  const ui = provider.ui();

  // 1) –ê–¥—Ä–µ—Å–∞ Vault (EQ‚Ä¶)
  const vaultAddr = await ui.inputAddress("Vault address (EQ‚Ä¶ of MagtClaimVault):");
  const vault = provider.open(MagtClaimVault.fromAddress(vaultAddr));

  // 2) –í–≤–µ–¥–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤ RAW (–∑ decimals)
  const amtRaw = await ui.input("Amount to claim (RAW units, e.g. 1000000000 = 1.0 MAGT if 9 decimals):");

  // –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —É BigInt –∑ –±–∞–∑–æ–≤–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
  const amount = BigInt(amtRaw.trim());

  ui.write(`üì§ Sending Claim for ${amount.toString()} raw MAGT‚Ä¶ approve in wallet`);

  await vault.send(
    provider.sender(),
    { value: toNano("0.15") }, // 0.08 TON –¥–ª—è gas
    { $$type: "Claim", amount }
  );

  ui.write("‚úÖ Claim(amount) sent");
}
